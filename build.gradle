plugins {
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id "org.siouan.frontend" version "3.0.1"
    id "org.sonarqube" version "3.0"
    id 'java'
    id 'jacoco'
}

group = 'posmy'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('azureVersion', "2.2.4")
    set('testContainersVersion', "1.14.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.microsoft.azure:azure-active-directory-spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testCompile('org.testcontainers:mongodb')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.awaitility:awaitility')
    testImplementation('org.springframework.security:spring-security-test')
    testImplementation('org.testcontainers:junit-jupiter')
}

dependencyManagement {
    imports {
        mavenBom "com.microsoft.azure:azure-spring-boot-bom:${azureVersion}"
    }
    dependencies {
        dependencySet(group: 'org.testcontainers', version: "${testContainersVersion}") {
            entry('mongodb',)
            entry('junit-jupiter')
        }
    }
}

test {
    useJUnitPlatform()
}

frontend {
    nodeVersion = '12.17.0'
    nodeInstallDirectory = file("${projectDir}/src/main/js/node")
    packageJsonDirectory = file("${projectDir}/src/main/js")

    assembleScript = 'run build'
}

sonarqube {
  properties {
    property "sonar.projectKey", "rashidi_argos"
    property "sonar.organization", "rashidi-github"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
